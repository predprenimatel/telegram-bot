import os
import logging
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Application, CommandHandler, CallbackContext

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: CallbackContext):
    webapp_url = "https://fincred.space/appfin.html"
    image_url = "https://imgur.com/a/GEj9eCh"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

    # –ö–Ω–æ–ø–∫–∞ "–û—Ñ–æ—Ä–º–∏—Ç–∏ –∫—Ä–µ–¥–∏—Ç"
    keyboard = [[InlineKeyboardButton("üí∞ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∫—Ä–µ–¥–∏—Ç", url=webapp_url)]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = (
        "üëã –í—ñ—Ç–∞—î–º–æ —É —Å–µ—Ä–≤—ñ—Å—ñ –ø—ñ–¥–±–æ—Ä—É –∫—Ä–µ–¥–∏—Ç—ñ–≤!\n\n"
        "üíµ –û—Ç—Ä–∏–º–∞–π—Ç–µ —à–≤–∏–¥–∫—É —Ñ—ñ–Ω–∞–Ω—Å–æ–≤—É –¥–æ–ø–æ–º–æ–≥—É –±–µ–∑ –∑–∞–π–≤–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤.\n"
        "üì≤ –ü—Ä–æ—Å—Ç–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞—è–≤–∫—É!"
    )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    await update.message.reply_photo(photo=image_url, caption=welcome_text, reply_markup=reply_markup)

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

    if not TOKEN:
        logger.error("‚ùå –¢–æ–∫–µ–Ω –≤—ñ–¥—Å—É—Ç–Ω—ñ–π! –£–∫–∞–∂—ñ—Ç—å –π–æ–≥–æ –≤ –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è.")
        return

    application = Application.builder().token(TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))

    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π! –û—á—ñ–∫—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...")

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    try:
        await application.run_polling()
    except Exception as e:
        logger.error(f"‚ö† –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    import asyncio

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º asyncio.run() –≤–º–µ—Å—Ç–æ get_event_loop
    asyncio.run(main())
